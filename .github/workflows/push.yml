name: Push

on:
  - push

jobs:
  backend:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Use node
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: ".nvmrc"

      - run: npm i && npm run build
        working-directory: packages/shared

      - run: npm i
        working-directory: backend
      - run: npm run build
        working-directory: backend

      - name: Sentry Release
        if: github.ref == 'refs/heads/main'
        uses: getsentry/action-release@v1.2.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        with:
          sourcemaps: backend/build-web
          environment: production
          ignore_empty: true
          projects: web

      - uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
      - uses: "google-github-actions/deploy-appengine@v0"
        with:
          working_directory: backend

  browser-extension:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Use node
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: ".nvmrc"
      - run: npm i
        working-directory: browser-extension
      - run: npm run build
        working-directory: browser-extension

  frontend:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Use node
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: ".nvmrc"

      - run: npm i && npm run build
        working-directory: packages/shared

      - run: npm i
        working-directory: frontend
      - name: Build
        run: npm run build
        working-directory: frontend

      - name: Deploy
        run: npm run deploy --prod
        if: github.ref == 'refs/heads/main'
        working-directory: frontend
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: Sentry Release
        if: github.ref == 'refs/heads/main'
        uses: getsentry/action-release@v1.2.0
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        with:
          sourcemaps: frontend/build/static/js
          environment: production
          ignore_empty: true
          projects: frontend

  functions-createImage:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Use node
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: ".nvmrc"
      - run: npm i
        working-directory: functions/createImage
      - run: npm run build
        working-directory: functions/createImage

      - uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
      - uses: "google-github-actions/deploy-cloud-functions@v0"
        with:
          name: createImage
          runtime: nodejs16
          region: europe-west1
          memory_mb: 128
          timeout: 10
          source_dir: functions/createImage

  functions-handleStravaWebhook:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Use node
        uses: actions/setup-node@v3.4.1
        with:
          node-version-file: ".nvmrc"
      - run: npm i
        working-directory: functions/handleStravaWebhook
      - run: npm run build
        working-directory: functions/handleStravaWebhook

      - uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
      - uses: "google-github-actions/deploy-cloud-functions@v0"
        with:
          name: handleStravaWebhook
          runtime: nodejs16
          region: europe-west1
          memory_mb: 128
          timeout: 10
          source_dir: functions/handleStravaWebhook
